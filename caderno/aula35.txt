DESAFIO: Criar uma tela em html com a data do computador do usuário

Fazendo o desafio usando tudo que foi apresentado até o momento:
--------------------------------------------------------------------------

# Fazendo o transporte de informações entre o hmtl e o javascript 

const h1 = document.querySelector('.container h1');
const data = new Date();
h1.innerHTML = data.toString();
--------------------------------------------------------------------------

# Função com switch que lê qual o dia da semana e retorna esse valor 
numérico em alguma das possibilidades (0-6)

function getWeekDayText(diaSemana) {
    let diaSemanaTexto;

    switch (diaSemana) {
    case 0:
        diaSemanaTexto = 'Domingo';
        return diaSemanaTexto;
    case 1:
        diaSemanaTexto = 'Segunda-feira';
        return diaSemanaTexto;
    case 2:
        diaSemanaTexto = 'Terça-feira';
        return diaSemanaTexto;
    case 3:
        diaSemanaTexto = 'Quarta-feira';
        return diaSemanaTexto;
    case 4:
        diaSemanaTexto = 'Quinta-feira';
        return diaSemanaTexto;
    case 5:
        diaSemanaTexto = 'Sexta-feira';
        return diaSemanaTexto;
    case 6:
        diaSemanaTexto = 'Sábado';
        return diaSemanaTexto;
    default:
        return 'No week day found!'
    }
}
--------------------------------------------------------------------------

# Função que tem o mesmo objetivo da anterior só que dessa vez tratando
os dados de mês, cada CASE é utilizado para um mês referente, retornando
para dentro de monthName o seu valor atribuido

function getMonthName(monthNumber) {
    let monthName;

    switch (monthNumber) {
        case 0:
            monthName = 'Janeiro';
            return monthName;
        case 1:
            monthName = 'Fevereiro';
            return monthName;
        case 2:
            monthName = 'Março';
            return monthName;
        case 3:
            monthName = 'Abril';
            return monthName;
        case 4:
            monthName = 'Maio';
            return monthName;
        case 5:
            monthName = 'Junho';
            return monthName;
        case 6:
            monthName = 'Julho';
            return monthName;
        case 7:
            monthName = 'Agosto';
            return monthName;
        case 8:
            monthName = 'Setembro';
            return monthName;
        case 9:
            monthName = 'Outubro';
            return monthName;
        case 10:
            monthName = 'Novembro';
            return monthName;
        case 11:
            monthName = 'Dezembro';
            return monthName;
    }
}
--------------------------------------------------------------------------

# Essa função é utilizada para formatar o horário, adicionando zeros a 
esquerda quando o número for menor do que 10

function ZeroAEsquerda (num) {
    return num >= 10 ? num : `0${num}`;
}
--------------------------------------------------------------------------

# Essa função é responsável por juntar tudo feito até aqui em uma string
retornar na tela do usuário formatado a data de hoje do pc dele 

function createDate(data) {
    const weekDay = data.getDay();
    const monthNumber = data.getMonth();

    const dayName = getWeekDayText(weekDay);
    const monthName = getMonthName(monthNumber);

    return `${dayName}, ${data.getDate()} de ${monthName}` + 
    ` de ${data.getFullYear()} ` + 
    `${ZeroAEsquerda(data.getHours())}:${ZeroAEsquerda(data.getMinutes())}` 
}
--------------------------------------------------------------------------

# Enviando os dados da função para o h1 do html e ser exibido na tela

h1.innerHTML = createDate(data);
--------------------------------------------------------------------------
--------------------------------------------------------------------------
--------------------------------------------------------------------------

Resolvendo da forma mais fácil:


# Fazendo o transporte de informações entre o hmtl e o javascript

const h1 = document.querySelector('.container h1');
const data = new Date();


# nessa constante colocamos as informações de data e hora que queremos
para nossa string

 const options = {
    dateStyle: 'full', 
    timeStyle: 'short'
 };


# Enviando os dados da função para o h1 do html e ser exibido na tela

 h1.innerHTML = data.toLocaleDateString ('pt-BR', options)

--------------------------------------------------------------------------
--------------------------------------------------------------------------
--------------------------------------------------------------------------

Como o professor faria caso não pudesse fazer dessa forma mais fácil: 

const h1 = document.querySelector('.container h1');
const data = new Date();
h1.innerHTML = data.toString();

function getWeekDayText(weekDay) {
    const WeeksDay = ['Domingo', 'Segunda-feira', 'Terça-feira', 'Quarta-feira', 'Quinta-feira', 'Sexta-feira']

    return WeeksDay[weekDay];
}

function getMonthName(monthNumber) {
    const months = ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro']

    return months[monthNumber];
    }
function ZeroAEsquerda (num) {
    return num >= 10 ? num : `0${num}`;
}

function createDate(data) {
    const weekDay = data.getDay();
    const monthNumber = data.getMonth();

    const dayName = getWeekDayText(weekDay);
    const monthName = getMonthName(monthNumber);

    return `${dayName}, ${data.getDate()} de ${monthName}` + 
    ` de ${data.getFullYear()} ` + 
    `${ZeroAEsquerda(data.getHours())}:${ZeroAEsquerda(data.getMinutes())}` 
}

h1.innerHTML = createDate(data);
--------------------------------------------------------------------------

# A grande diferença é que ao invés de utilizar switch, ele criaria um
array com todos os meses, e retornaria um valor da listar referente ao
valor numérico recebido pelo computador

function getWeekDayText(weekDay) {
    const WeeksDay = ['Domingo', 'Segunda-feira', 'Terça-feira', 'Quarta-feira', 'Quinta-feira', 'Sexta-feira']

    return WeeksDay[weekDay];
}

const weekDay = data.getDay();

--------------------------------------------------------------------------
--------------------------------------------------------------------------
--------------------------------------------------------------------------